{
    "version": "https://jsonfeed.org/version/1",
    "title": "Starlike",
    "subtitle": "",
    "icon": "https://www.xuwanxing.space/images/favicon.ico",
    "description": "Take some notes.",
    "home_page_url": "https://www.xuwanxing.space",
    "items": [
        {
            "id": "https://www.xuwanxing.space/project/software/aliyun_baiduyun/",
            "url": "https://www.xuwanxing.space/project/software/aliyun_baiduyun/",
            "title": "Aliyun & Baiduyun",
            "date_published": "2022-12-21T16:00:00.000Z",
            "content_html": "<h2 id=\"Aliyun\"><a href=\"#Aliyun\" class=\"headerlink\" title=\"Aliyun\"></a>Aliyun</h2><ol>\n<li>Download and install</li>\n</ol>\n<p>See <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RpY2tzdGVwL2FsaXl1bnBhbi9yZWxlYXNlcw==\">github</span>. Should choose ‚Äúamd64&#x2F;x64‚Äù.</p>\n<ol start=\"2\">\n<li>Login</li>\n</ol>\n<pre><code class=\"bash\">$ aliyunpan &gt; login\n</code></pre>\n<p>Should type ‚ÄúRefreshToken‚Äù here. (<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMjIvMDQyMy8wOS83NjE0OTY5N18xMDI3ODU3NjU2LnNodG1s\">Howto</span>)</p>\n<ol start=\"3\">\n<li>Usage</li>\n</ol>\n<pre><code class=\"bash\">$ aliyunpan &gt; download &lt;path to directory or file&gt;\n$ aliyunpan &gt; upload &lt;path to directory or file&gt; &lt;remote directory&gt;\n$ aliyunpan &gt; logout\n</code></pre>\n<h2 id=\"Baiduyun\"><a href=\"#Baiduyun\" class=\"headerlink\" title=\"Baiduyun\"></a>Baiduyun</h2><ol>\n<li>Install</li>\n</ol>\n<p>See <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hvdXRpYW56ZS9ieXB5\">github</span>.</p>\n<pre><code class=\"bash\">$ pip install bypy\n</code></pre>\n<ol start=\"2\">\n<li>Usage</li>\n</ol>\n<pre><code class=\"bash\">$ bypy info # verification\n$ bypy list\n$ bypy downdir / # or syncdown\n$ bypy upload # or syncup\n</code></pre>\n",
            "tags": [
                "Project",
                "Software",
                "aliyun",
                "baiduyun"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/project/software/vcftools/",
            "url": "https://www.xuwanxing.space/project/software/vcftools/",
            "title": "vcftools",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<h2 id=\"Useful-commands\"><a href=\"#Useful-commands\" class=\"headerlink\" title=\"Useful commands\"></a>Useful commands</h2><pre><code class=\"bash\">$ vcftools --gzvcf input.vcf.gz --keep id.txt --recode --stdout | gzip -c &gt; out.vcf.gz\n$ vcftools --gzvcf input.vcf.gz --positions SNP_list.txt --out nucleotide_diversity\n$ vcftools --gzvcf input.vcf.gz --chr 1 --from-bp a --to-bp b --recode --recode-INFO-all --out chr1_analysis\n$ vcftools --gzvcf input.vcf.gz --freq --out freq_analysis\n$ vcf-compare first.vcf.gz second.vcf.gz\n</code></pre>\n<hr>\n<h2 id=\"Issues\"><a href=\"#Issues\" class=\"headerlink\" title=\"Issues\"></a>Issues</h2><p>‚ö†Ô∏è <strong>Error</strong></p>\n<pre><code class=\"bash\">&quot;Can&#39;t locate Vcf.pm in @INC&quot; when using perl-vcf modules\n</code></pre>\n<p>üîß <strong>Solution</strong></p>\n<pre><code class=\"bash\">$ export PERL5LIB=/path to vcftools/share/perl5\n</code></pre>\n",
            "tags": [
                "Project",
                "Software",
                "vcftools"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/project/software/bedtools/",
            "url": "https://www.xuwanxing.space/project/software/bedtools/",
            "title": "bedtools",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<h2 id=\"Compare\"><a href=\"#Compare\" class=\"headerlink\" title=\"Compare\"></a>Compare</h2><pre><code class=\"bash\">$ bedtools intersect -a f1.bed -b f2.bed -wa -wb | bedtools groupby -i - -g 1-3 -c 7 -o collapse &gt; final.bed\n</code></pre>\n",
            "tags": [
                "Project",
                "Software",
                "bedtools"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/server/maintenance/NIS/",
            "url": "https://www.xuwanxing.space/server/maintenance/NIS/",
            "title": "NIS",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<h2 id=\"Rename-folder\"><a href=\"#Rename-folder\" class=\"headerlink\" title=\"Rename folder\"></a>Rename folder</h2><pre><code class=\"bash\">$ umount /oldfolder\n$ mv /oldfolder/ /newfolder\n$ mount /dev....   /newfolder\n$ vim /etc/fstab\n</code></pre>\n<h2 id=\"Configuration\"><a href=\"#Configuration\" class=\"headerlink\" title=\"Configuration\"></a>Configuration</h2><ol>\n<li>Install</li>\n</ol>\n<pre><code class=\"bash\">$ yum install ypbind yp-tools\n</code></pre>\n<ol start=\"2\">\n<li>Modify</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/sysconfig/network\n\n# add\nNISDOMAIN=nisdomain\n</code></pre>\n<ol start=\"3\">\n<li>Modify2</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/nsswitch.conf\n\n# edit\npasswd:     nis files sss\nshadow:     nis files sss\ngroup:      nis files sss\n\nhosts:      nis files dns myhostname\n</code></pre>\n<ol start=\"4\">\n<li>Modify3</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/yp.conf\n\n# add\ndomain nisdomain server master-node\n</code></pre>\n<ol start=\"5\">\n<li>Modify4</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/sysconfig/authconfig\n\n# edit\nUSENIS=yes\n</code></pre>\n<ol start=\"6\">\n<li>Modify5</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/pam.d/system-auth\n\n# add\nsession     optional      pam_mkhomedir.so skel=/etc/skel umask=077\n</code></pre>\n<ol start=\"7\">\n<li>Final</li>\n</ol>\n<pre><code class=\"bash\">$ systemctl start rpcbind\n$ systemctl start ypbind\n\n$ systemctl enable rpcbind\n$ systemctl enable ypbind\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmVlLmltLzIwMTkvMDMvaW5zdGFsbC1uaXMtb24tY2VudG9zNy8=\">Reference</span></p>\n",
            "tags": [
                "Server",
                "Maintenance",
                "Linux",
                "NIS"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/server/maintenance/User/",
            "url": "https://www.xuwanxing.space/server/maintenance/User/",
            "title": "User and group",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<h2 id=\"Create\"><a href=\"#Create\" class=\"headerlink\" title=\"Create\"></a>Create</h2><p># on master node</p>\n<pre><code class=\"bash\">$ useradd -m -d /public/user -g group user\n$ passwd user\n\n# ssh authorized key\n$ su - user\n$ ssh-keygen\n$ cd ~/.ssh\n$ cp id_rsa.pub authorized_keys\n$ chmod 700 authorized_keys\n\n# sync\n$ cd /var/yp\n$ make\n</code></pre>\n<h2 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h2><pre><code class=\"bash\">$ userdel -r user\n\n# from group\n$ gpasswd -d user group\n</code></pre>\n<h2 id=\"Modify\"><a href=\"#Modify\" class=\"headerlink\" title=\"Modify\"></a>Modify</h2><pre><code class=\"bash\"># add to group\n$ usermod -a -G group user\n\n# set uid and gid\n$ usermod -u 1111 testuser   \n$ groupmod -g 1112 testgroup\n</code></pre>\n",
            "tags": [
                "Server",
                "Maintenance",
                "Linux"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/server/maintenance/Samba/",
            "url": "https://www.xuwanxing.space/server/maintenance/Samba/",
            "title": "Samba",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<h2 id=\"Add-new-user\"><a href=\"#Add-new-user\" class=\"headerlink\" title=\"Add new user\"></a>Add new user</h2><pre><code class=\"bash\">$ smbpasswd -a username\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzc3lnMjAxMS9hcnRpY2xlL2RldGFpbHMvMTA2OTM1NDk0\">Reference1</span></p>\n<h2 id=\"Backup\"><a href=\"#Backup\" class=\"headerlink\" title=\"Backup\"></a>Backup</h2><pre><code class=\"bash\">$ rsync -av /etc/samba/ /etc/samba.old/\n$ rpm -qa |grep samba\n$ rpm -e (--nodeps) package # don&#39;t verify package dependencies (optional)\n</code></pre>\n<h2 id=\"Recycle-function\"><a href=\"#Recycle-function\" class=\"headerlink\" title=\"Recycle function\"></a>Recycle function</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NtenN0ZXZlbi9hcnRpY2xlL2RldGFpbHMvNDkwNDkzNzM=\">Reference2</span></p>\n",
            "tags": [
                "Server",
                "Maintenance",
                "Linux",
                "Samba"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/server/maintenance/Slurm/",
            "url": "https://www.xuwanxing.space/server/maintenance/Slurm/",
            "title": "Slurm",
            "date_published": "2022-10-14T16:00:00.000Z",
            "content_html": "<p>:::info<br>Continue updating.<br>:::</p>\n<h2 id=\"Fix-‚Äúdrain‚Äù-status\"><a href=\"#Fix-‚Äúdrain‚Äù-status\" class=\"headerlink\" title=\"Fix ‚Äúdrain‚Äù status\"></a>Fix ‚Äúdrain‚Äù status</h2><pre><code class=\"bash\">scontrol update nodename=nodeXX state=resume\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTcxNDQ2MDIvcmVzdGFydC1ub2Rlcy1pbi1zdGF0ZS1kb3du\">Reference1</span></p>\n<h2 id=\"Restart\"><a href=\"#Restart\" class=\"headerlink\" title=\"Restart\"></a>Restart</h2><p># on master node</p>\n<pre><code class=\"bash\">$ systemctl restart slurmctld.service\n$ systemctl restart slurmdbd.service\n$ systemctl restart slurmd.service\n</code></pre>\n<p># on slave node</p>\n<pre><code class=\"bash\">$ systemctl restart slurmd.service\n</code></pre>\n<h2 id=\"Upgrade\"><a href=\"#Upgrade\" class=\"headerlink\" title=\"Upgrade\"></a>Upgrade</h2><p># on master node</p>\n<pre><code class=\"bash\">$ systemctl stop slurmdbd.service\n$ systemctl stop slurmctld.service\n$ systemctl stop slurmd.service\n</code></pre>\n<p># on slave node</p>\n<pre><code class=\"bash\">$ systemctl stop slurmd.service\n</code></pre>\n<p># on master node, make backup of database and old config files</p>\n<pre><code class=\"bash\">$ mysqldump -p --databases slurm_acct_db &gt; backup.sql (path: /root)\n\n$ mkdir old_slurm\n$ cp -r /etc/slurm/* /root/old_slurm\n</code></pre>\n<p># all nodes upgrade</p>\n<pre><code class=\"bash\"># conda deactivate, clean environment\n# echo $LD_LIBRARY_PATH [*]\n# unset LD_LIBRARY_PATH [*]\n# export PATH=/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/usr/local/bin:/root/bin [*]\n# yum --disablerepo=&#39;*&#39; localinstall libaec-1.0.4-1.el7.x86_64.rpm libaec-devel-1.0.4-1.el7.x86_64.rpm hdf5-devel-1.8.12-12.el7.x86_64.rpm hdf5-1.8.12-12.el7.x86_64.rpm \n$ rpmbuild -ta slurm-*.tar.bz2\n$ rpm --upgrade *.rpm # for downgrade, use &quot;rpm -Uvh --oldpackage *.rpm&quot;\n$ yum --disablerepo=&#39;*&#39; list slurm\n\n# &quot;[*]&quot; maybe necessary\n</code></pre>\n<h2 id=\"Pam\"><a href=\"#Pam\" class=\"headerlink\" title=\"Pam\"></a>Pam</h2><ol>\n<li>Config1</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/slurm/slurm.conf\n\n#TaskPlugin=task/affinity\nTaskPlugin=task/cgroup\nPrologFlags=contain\n</code></pre>\n<ol start=\"2\">\n<li>Config2</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/pam.d/sshd\n\naccount    sufficient    pam_listfile.so item=user sense=allow onerr=fail file=/etc/ssh/slurm_allowed_users\n-account    required      pam_slurm_adopt.so\n</code></pre>\n<ol start=\"3\">\n<li>Config3</li>\n</ol>\n<pre><code class=\"bash\">$ vim /etc/pam.d/password-auth\n\n#account    sufficient    pam_localuser.so\n#-session   optional      pam_systemd.so\n</code></pre>\n<p># scp from master node to slave nodes</p>\n<pre><code class=\"bash\">$ scp /etc/slurm/slurm.conf nodeXX:/etc/slurm/\n$ scp /etc/pam.d/sshd nodeXX:/etc/pam.d/\n$ scp /etc/pam.d/password-auth nodeXX:/etc/pam.d/password-auth\n</code></pre>\n<ol start=\"4\">\n<li>Restart</li>\n</ol>\n<pre><code class=\"bash\">$ systemctl restart sshd.service\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbHVybS5zY2hlZG1kLmNvbS9hcmNoaXZlL3NsdXJtLTIwLjAyLjcvcGFtX3NsdXJtX2Fkb3B0Lmh0bWw=\">Reference2</span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTEwNjEzL2FydGljbGUvZGV0YWlscy8xMDMzMzg3NTg=\">Reference3</span></p>\n<hr>\n<h2 id=\"Issues\"><a href=\"#Issues\" class=\"headerlink\" title=\"Issues\"></a>Issues</h2><p>‚ö†Ô∏è <strong>Error</strong></p>\n<pre><code class=\"bash\">Failed to start MUNGE authentication service.\n</code></pre>\n<p>üîß <strong>Solution</strong></p>\n<ol>\n<li>Check time sync status</li>\n</ol>\n<pre><code class=\"bash\">$ systemctl stop ntpd.service\n$ ntpd -gq\n$ systemctl start ntpd.service\n</code></pre>\n<ol start=\"2\">\n<li>Check munge folder</li>\n</ol>\n<pre><code class=\"bash\"># check if /var/run/munge is missing\n$ mkdir /var/run/munge\n$ chown -R munge:munge /var/run/munge/\n$ systemctl restart munge.service\n$ systemctl restart slurmd.service\n</code></pre>\n",
            "tags": [
                "Server",
                "Maintenance",
                "Linux",
                "Slurm"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/server/maintenance/Basic_commands/",
            "url": "https://www.xuwanxing.space/server/maintenance/Basic_commands/",
            "title": "Basic commands",
            "date_published": "2022-10-11T16:00:00.000Z",
            "content_html": "<h2 id=\"Check-hardware-info\"><a href=\"#Check-hardware-info\" class=\"headerlink\" title=\"Check hardware info\"></a>Check hardware info</h2><pre><code class=\"bash\">$ cat /etc/centos-release  # version\n$ lspci | grep -i nvidia  # gpu\n$ uname -a  # kernel\n\n$ lshw -html &gt; /hardware.html  # print all info\n$ lscpu  # cpu info\n$ cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c  # cpu parameters\n$ cat /proc/cpuinfo| grep &quot;physical id&quot;| sort| uniq| wc -l  # physical cpus \n$ cat /proc/cpuinfo| grep &quot;cpu cores&quot;| uniq  # no.cores\n$ cat /proc/cpuinfo| grep &quot;processor&quot;| wc -l  # virtual cpus\n$ cat /proc/meminfo |grep MemTotal  # memory\n$ fdisk -l |grep Disk  # disk info\n$ lsscsi  # SSD\n$ lsof -i # list the process name and number that has opened the ports\n$ netstat -tulnp # see if a program or process is listening on a port, ready to accept a packet\n</code></pre>\n<h2 id=\"Switch-to-multi-user-mode\"><a href=\"#Switch-to-multi-user-mode\" class=\"headerlink\" title=\"Switch to multi-user mode\"></a>Switch to multi-user mode</h2><pre><code class=\"bash\">$ systemctl get-default # graphical.target is useless\n\n$ systemctl stop gdm.service\n$ systemctl set-default multi-user.target\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvR0RNI3N5c3RlbWQ=\">Reference1</span></p>\n<h2 id=\"Empty-the-buffers-and-cache\"><a href=\"#Empty-the-buffers-and-cache\" class=\"headerlink\" title=\"Empty the buffers and cache\"></a>Empty the buffers and cache</h2><p># To clear the swap:</p>\n<pre><code class=\"bash\">$ swapoff /dev/dm-1\n$ swapon /dev/dm-1\n$ swapon -s\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy84NzkwOC9ob3ctZG8teW91LWVtcHR5LXRoZS1idWZmZXJzLWFuZC1jYWNoZS1vbi1hLWxpbnV4LXN5c3RlbQ==\">Reference2</span></p>\n<h2 id=\"Yum\"><a href=\"#Yum\" class=\"headerlink\" title=\"Yum\"></a>Yum</h2><pre><code class=\"bash\">$ yumdownloader packagename # off-line install\n$ yum --disablerepo=&#39;*&#39; install rpm-package \n</code></pre>\n<h2 id=\"File-operation\"><a href=\"#File-operation\" class=\"headerlink\" title=\"File operation\"></a>File operation</h2><p># Permission</p>\n<pre><code class=\"bash\">$ chmod -R 700 ./file\n$ chown -R user:group ./file\n</code></pre>\n<p># Move</p>\n<pre><code class=\"bash\"># copy all the files including hidden files\n$ cp -a /old/. /folder/\n</code></pre>\n<p># Download</p>\n<pre><code class=\"bash\"># background, continue, input, output\n$ wget -bc -i url.list -o log.txt\n# advanced options: -r recursive //-np no-parent //-4 connect only to IPv4 addresses.\n\n# write output to a file named as the remote file\n$ curl -O http://file\n</code></pre>\n<p># compress &amp; uncompress</p>\n<pre><code class=\"bash\">$ tar -zxvf file -C /dir # -C uncompress to directory //-z for gzip //-j for bzip\n$ unzip file -d ./dir # -d uncompress to directory\n\n$ tar -cfz archive.tar.gz file1 file2 file3\n$ tar -czPf archive.tar.gz /file_dir -C /outdir  # -P don&#39;t strip leading `/&#39;s from file names\n</code></pre>\n<h2 id=\"Sync-time\"><a href=\"#Sync-time\" class=\"headerlink\" title=\"Sync time\"></a>Sync time</h2><p># on master node</p>\n<pre><code class=\"bash\">$ date -s &quot;2021-11-22 13:15:43&quot;\n</code></pre>\n<pre><code class=\"bash\">$ clock -w\n$ systemctl restart ntpd.service\n</code></pre>\n<p># wait for a while</p>\n<p># on slave node</p>\n<pre><code class=\"bash\">$ systemctl stop ntpd.service\n$ ntpd -gq\n$ systemctl start ntpd.service\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2trLmJpZ2VyLm1lL3RpbWUucGhw\">Reference3</span></p>\n<h2 id=\"Sudo\"><a href=\"#Sudo\" class=\"headerlink\" title=\"Sudo\"></a>Sudo</h2><p># add a sudoer</p>\n<pre><code class=\"bash\">username       ALL=(root)      /usr/sbin/*,/sbin/*,/usr/bin/*,!/usr/bin/passwd,!/usr/sbin/visudo,!/usr/sbin/useradd,!/usr/sbin/userdel,!/usr/sbin/reboot,!/usr/sbin/poweroff,!/usr/sbin/shutdown\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2VsaXphYmV0aHh4eS9hcnRpY2xlL2RldGFpbHMvMTA4NjgyODkz\">Reference4</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZW5rdS5iYWlkdS5jb20vdmlldy8xYzFiYTAwNWJmZDEyNmZmZjcwNWNjMTc1NTI3MDcyMjE5MmU1OWVhLmh0bWw=\">Reference5</span></p>\n<h2 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h2><pre><code class=\"bash\">$ echo &#39;HISTTIMEFORMAT=&quot;%F %T &quot;&#39; &gt;&gt; /etc/profile\n$ source /etc/profile\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85OTgxODY2NA==\">Reference6</span></p>\n<h2 id=\"Backup\"><a href=\"#Backup\" class=\"headerlink\" title=\"Backup\"></a>Backup</h2><pre><code class=\"bash\">$ rsync -zvh backup.tar /tmp/backups/ # cp file\n$ rsync -avzh /root/rpmpkgs /tmp/backups/ # cp dir\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2VsYW1veXVqdXpoZW4vcC8xMDA4OTQ1NC5odG1s\">Reference7</span></p>\n",
            "tags": [
                "Server",
                "Maintenance",
                "Linux"
            ]
        },
        {
            "id": "https://www.xuwanxing.space/project/About_hexo/",
            "url": "https://www.xuwanxing.space/project/About_hexo/",
            "title": "About hexo",
            "date_published": "2022-10-10T16:00:00.000Z",
            "content_html": "<p>This is a post about how to install <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span> on server and pull the repository to github.</p>\n<h2 id=\"Install-hexo-on-server\"><a href=\"#Install-hexo-on-server\" class=\"headerlink\" title=\"Install hexo on server\"></a>Install hexo on server</h2><h3 id=\"Create-a-conda-environment\"><a href=\"#Create-a-conda-environment\" class=\"headerlink\" title=\"Create a conda environment\"></a>Create a conda environment</h3><pre><code class=\"bash\">$ conda create -n hexo-env\n</code></pre>\n<h3 id=\"Install-dependent-packages\"><a href=\"#Install-dependent-packages\" class=\"headerlink\" title=\"Install dependent packages\"></a>Install dependent packages</h3><pre><code class=\"bash\">$ conda activate hexo-env\n$ conda install -c conda-forge nodejs\n$ conda install -c conda-forge git\n</code></pre>\n<h3 id=\"Install-hexo\"><a href=\"#Install-hexo\" class=\"headerlink\" title=\"Install hexo\"></a>Install hexo</h3><pre><code class=\"bash\">$ npm install -g hexo-cli\n$ npm install hexo-deployer-git --save\n</code></pre>\n<h3 id=\"Set-git-config-and-ssh-key\"><a href=\"#Set-git-config-and-ssh-key\" class=\"headerlink\" title=\"Set git config and ssh key\"></a>Set git config and ssh key</h3><pre><code class=\"bash\">$ git config --global user.name &quot;github user name&quot;\n$ git config --global user.email &quot;github user email&quot;\n$ ssh-keygen -t rsa -C &quot;github user email&quot;\n# then copy the content of id_rsa.pub, save as a ssh key of github account\n# check the connection to github\n$ ssh git@github.com\n</code></pre>\n<h3 id=\"Init-hexo-website\"><a href=\"#Init-hexo-website\" class=\"headerlink\" title=\"Init hexo website\"></a>Init hexo website</h3><pre><code class=\"bash\"># cd /path to website directory/\n$ hexo init\n$ npm install\n$ hexo g # generate static files\n$ hexo s # start a local server, should check the port number\n$ hexo d # deploy website\n</code></pre>\n<hr>\n<h2 id=\"Issues\"><a href=\"#Issues\" class=\"headerlink\" title=\"Issues\"></a>Issues</h2><p>‚ö†Ô∏è <strong>Error</strong></p>\n<pre><code class=\"bash\">fatal: unable to access &#39;https://github.com/example/website/&#39;: OpenSSL SSL_read: error:0A000126:SSL routines::unexpected eof while reading, errno 0\nFATAL &#123;\n  err: Error: Spawn failed\n      at ChildProcess.&lt;anonymous&gt; (/example/website/node_modules/hexo-util/lib/spawn.js:51:21)\n      at ChildProcess.emit (node:events:513:28)\n      at ChildProcess._handle.onexit (node:internal/child_process:291:12) &#123;\n    code: 128\n  &#125;\n&#125; Something&#39;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html\n</code></pre>\n<p>üîß <strong>Solution</strong></p>\n<pre><code class=\"bash\">$ hexo config deploy.repository git@github.com:[github name]/[repository]\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcy8yNzc4\">Reference1</span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p4MTU2OTU1L2FydGljbGUvZGV0YWlscy8xMjExMjA2MTM=\">Reference2</span></p>\n",
            "tags": [
                "Project",
                "Hexo"
            ]
        }
    ]
}